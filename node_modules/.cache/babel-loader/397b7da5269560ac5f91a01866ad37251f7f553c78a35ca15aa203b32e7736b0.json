{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;\nconst BASE_URL = \"https://www.googleapis.com/books/v1/volumes\";\nexport const googleBooksService = {\n  async searchBooks(query, maxResults = 20) {\n    try {\n      const response = await fetch(`${BASE_URL}?q=${encodeURIComponent(query)}&maxResults=${maxResults}&key=${API_KEY}`);\n      if (!response.ok) {\n        throw new Error(\"Erro ao buscar livros\");\n      }\n      const data = await response.json();\n      return data.items.map(item => {\n        var _item$volumeInfo$auth, _item$volumeInfo$imag;\n        return {\n          id: item.id,\n          title: item.volumeInfo.title,\n          author: ((_item$volumeInfo$auth = item.volumeInfo.authors) === null || _item$volumeInfo$auth === void 0 ? void 0 : _item$volumeInfo$auth.join(\", \")) || \"Autor desconhecido\",\n          description: item.volumeInfo.description || \"Sem descrição disponível\",\n          imageUrl: ((_item$volumeInfo$imag = item.volumeInfo.imageLinks) === null || _item$volumeInfo$imag === void 0 ? void 0 : _item$volumeInfo$imag.thumbnail) || \"/placeholder-book.jpg\",\n          publishedDate: item.volumeInfo.publishedDate,\n          publisher: item.volumeInfo.publisher,\n          pageCount: item.volumeInfo.pageCount,\n          categories: item.volumeInfo.categories || [],\n          language: item.volumeInfo.language,\n          previewLink: item.volumeInfo.previewLink,\n          infoLink: item.volumeInfo.infoLink\n        };\n      });\n    } catch (error) {\n      console.error(\"Erro ao buscar livros:\", error);\n      throw error;\n    }\n  },\n  async getBookById(bookId) {\n    try {\n      var _item$volumeInfo$auth2, _item$volumeInfo$imag2;\n      const response = await fetch(`${BASE_URL}/${bookId}?key=${API_KEY}`);\n      if (!response.ok) {\n        throw new Error(\"Erro ao buscar livro\");\n      }\n      const item = await response.json();\n      return {\n        id: item.id,\n        title: item.volumeInfo.title,\n        author: ((_item$volumeInfo$auth2 = item.volumeInfo.authors) === null || _item$volumeInfo$auth2 === void 0 ? void 0 : _item$volumeInfo$auth2.join(\", \")) || \"Autor desconhecido\",\n        description: item.volumeInfo.description || \"Sem descrição disponível\",\n        imageUrl: ((_item$volumeInfo$imag2 = item.volumeInfo.imageLinks) === null || _item$volumeInfo$imag2 === void 0 ? void 0 : _item$volumeInfo$imag2.thumbnail) || \"/placeholder-book.jpg\",\n        publishedDate: item.volumeInfo.publishedDate,\n        publisher: item.volumeInfo.publisher,\n        pageCount: item.volumeInfo.pageCount,\n        categories: item.volumeInfo.categories || [],\n        language: item.volumeInfo.language,\n        previewLink: item.volumeInfo.previewLink,\n        infoLink: item.volumeInfo.infoLink\n      };\n    } catch (error) {\n      console.error(\"Erro ao buscar livro:\", error);\n      throw error;\n    }\n  },\n  // Buscar livros por autor\n  searchBooksByAuthor: async (author, options = {}) => {\n    return googleBooksService.searchBooks(`inauthor:${author}`, options);\n  },\n  // Buscar livros por título\n  searchBooksByTitle: async (title, options = {}) => {\n    return googleBooksService.searchBooks(`intitle:${title}`, options);\n  },\n  // Buscar livros por ISBN\n  searchBooksByISBN: async (isbn, options = {}) => {\n    return googleBooksService.searchBooks(`isbn:${isbn}`, options);\n  }\n};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_GOOGLE_BOOKS_API_KEY","BASE_URL","googleBooksService","searchBooks","query","maxResults","response","fetch","encodeURIComponent","ok","Error","data","json","items","map","item","_item$volumeInfo$auth","_item$volumeInfo$imag","id","title","volumeInfo","author","authors","join","description","imageUrl","imageLinks","thumbnail","publishedDate","publisher","pageCount","categories","language","previewLink","infoLink","error","console","getBookById","bookId","_item$volumeInfo$auth2","_item$volumeInfo$imag2","searchBooksByAuthor","options","searchBooksByTitle","searchBooksByISBN","isbn"],"sources":["/Users/leonardomota/Desktop/testeDeSoftware/library-system-react/src/services/googleBooksService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;\nconst BASE_URL = \"https://www.googleapis.com/books/v1/volumes\";\n\nexport const googleBooksService = {\n  async searchBooks(query, maxResults = 20) {\n    try {\n      const response = await fetch(\n        `${BASE_URL}?q=${encodeURIComponent(query)}&maxResults=${maxResults}&key=${API_KEY}`\n      );\n      \n      if (!response.ok) {\n        throw new Error(\"Erro ao buscar livros\");\n      }\n\n      const data = await response.json();\n      \n      return data.items.map(item => ({\n        id: item.id,\n        title: item.volumeInfo.title,\n        author: item.volumeInfo.authors?.join(\", \") || \"Autor desconhecido\",\n        description: item.volumeInfo.description || \"Sem descrição disponível\",\n        imageUrl: item.volumeInfo.imageLinks?.thumbnail || \"/placeholder-book.jpg\",\n        publishedDate: item.volumeInfo.publishedDate,\n        publisher: item.volumeInfo.publisher,\n        pageCount: item.volumeInfo.pageCount,\n        categories: item.volumeInfo.categories || [],\n        language: item.volumeInfo.language,\n        previewLink: item.volumeInfo.previewLink,\n        infoLink: item.volumeInfo.infoLink\n      }));\n    } catch (error) {\n      console.error(\"Erro ao buscar livros:\", error);\n      throw error;\n    }\n  },\n\n  async getBookById(bookId) {\n    try {\n      const response = await fetch(`${BASE_URL}/${bookId}?key=${API_KEY}`);\n      \n      if (!response.ok) {\n        throw new Error(\"Erro ao buscar livro\");\n      }\n\n      const item = await response.json();\n      \n      return {\n        id: item.id,\n        title: item.volumeInfo.title,\n        author: item.volumeInfo.authors?.join(\", \") || \"Autor desconhecido\",\n        description: item.volumeInfo.description || \"Sem descrição disponível\",\n        imageUrl: item.volumeInfo.imageLinks?.thumbnail || \"/placeholder-book.jpg\",\n        publishedDate: item.volumeInfo.publishedDate,\n        publisher: item.volumeInfo.publisher,\n        pageCount: item.volumeInfo.pageCount,\n        categories: item.volumeInfo.categories || [],\n        language: item.volumeInfo.language,\n        previewLink: item.volumeInfo.previewLink,\n        infoLink: item.volumeInfo.infoLink\n      };\n    } catch (error) {\n      console.error(\"Erro ao buscar livro:\", error);\n      throw error;\n    }\n  },\n\n  // Buscar livros por autor\n  searchBooksByAuthor: async (author, options = {}) => {\n    return googleBooksService.searchBooks(`inauthor:${author}`, options);\n  },\n\n  // Buscar livros por título\n  searchBooksByTitle: async (title, options = {}) => {\n    return googleBooksService.searchBooks(`intitle:${title}`, options);\n  },\n\n  // Buscar livros por ISBN\n  searchBooksByISBN: async (isbn, options = {}) => {\n    return googleBooksService.searchBooks(`isbn:${isbn}`, options);\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}